<?xml version="1.0"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<!-- /** * Licensed to the Apache Software Foundation (ASF) under one * or 
	more contributor license agreements. See the NOTICE file * distributed with 
	this work for additional information * regarding copyright ownership. The 
	ASF licenses this file * to you under the Apache License, Version 2.0 (the 
	* "License"); you may not use this file except in compliance * with the License. 
	You may obtain a copy of the License at * * http://www.apache.org/licenses/LICENSE-2.0 
	* * Unless required by applicable law or agreed to in writing, software * 
	distributed under the License is distributed on an "AS IS" BASIS, * WITHOUT 
	WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. * See the 
	License for the specific language governing permissions and * limitations 
	under the License. */ -->
<configuration supports_final="true">

	<property>
		<name>taskmanager.tmp.dirs: /tmp</name>
		<display-name>Flink task manager temporary directory</display-name>
		<value>/tmp</value>
		<description>A directory on the local filesystem used by Flink
			taskmanager as
			temporary directory.
		</description>
		<value-attributes>
			<type>directory</type>
		</value-attributes>
		<on-ambari-upgrade add="true" />
	</property>
	<property>
		<name>jobmanager.rpc.port</name>
		<value>6123</value>
		<description>The port Flink to start the Job Manager service
		</description>
		<value-attributes>
			<type>int</type>
		</value-attributes>
		<on-ambari-upgrade add="true" />
	</property>
	<property>
		<name>parallelism.default</name>
		<value>1</value>
		<description>The defautl parallelism for running jobs</description>
		<value-attributes>
			<type>int</type>
		</value-attributes>
		<on-ambari-upgrade add="true" />
	</property>


	<property>
		<name>flink_numcontainers</name>
		<value>1</value>
		<description>Number of YARN container to allocate (=Number of Task
			Managers)
		</description>
		<value-attributes>
			<type>int</type>
		</value-attributes>
		<on-ambari-upgrade add="true" />
	</property>

	<property>
		<name>flink_numberoftaskslots</name>
		<value>1</value>
		<description>Number of task slots in each container</description>
		<value-attributes>
			<type>int</type>
		</value-attributes>
		<on-ambari-upgrade add="true" />
	</property>

	<property>
		<name>flink_appname</name>
		<value>flinkapp-from-ambari</value>
		<description>Flink application name</description>
		<on-ambari-upgrade add="true" />
	</property>

	<property>
		<name>flink_queue</name>
		<value>default</value>
		<description>YARN queue to schedule Flink job on</description>
		<on-ambari-upgrade add="true"/>
	</property>

	<property>
		<name>flink_streaming</name>
		<value>false</value>
		<description>If true, Flink will be started in streaming mode: to be
			used when only streaming jobs will be executed on Flink
		</description>
		 <value-attributes>
      		<type>boolean</type>
    	</value-attributes>
    	<on-ambari-upgrade add="true" />
	</property>

	<property>
		<name>flink_jobmanager_memory</name>
		<value>768</value>
		<description>Memory for JobManager Container [in MB]. Must be at least
			768
		</description>
		<on-ambari-upgrade add="true"/>
	</property>

	<property>
		<name>flink_container_memory</name>
		<value>1024</value>
		<description>Memory per TaskManager Container [in MB]</description>
		<on-ambari-upgrade add="true"/>
	</property>


	<property>
		<name>content</name>
		<display-name>flink-conf.yaml template</display-name>
		<description>This is the jinja template for flink-conf.yaml file
		</description>
		<value>
			#==============================================================================
			# Common
			#==============================================================================

			jobmanager.rpc.address: localhost

			#jobmanager.rpc.port: 6123

			jobmanager.heap.mb: 256

			taskmanager.heap.mb: 512

			taskmanager.numberOfTaskSlots: 1

			#parallelism.default: 1

			#==============================================================================
			# Web Frontend
			#==============================================================================
			# The port under which the web-based runtime monitor listens.
			# A
			value of -1 deactivates the web server.
			jobmanager.web.port: 8081

			# The
			port uder which the standalone web client
			# (for job upload and
			submit) listens.

			webclient.port: 8080

			#==============================================================================
			# Streaming state checkpointing
			#==============================================================================

			# The backend that will be used to store operator state checkpoints
			if
			# checkpointing is enabled.
			#
			# Supported backends: jobmanager,
			filesystem

			state.backend: jobmanager

			# Directory for storing
			checkpoints in a flink supported filesystem
			# Note: State backend must
			be accessible from the JobManager, use
			file://
			# only for local setups.
			#
			# state.backend.fs.checkpointdir: hdfs://checkpoints

			#==============================================================================
			# Advanced
			#==============================================================================
			# The number of buffers for the network stack.
			#
			#
			taskmanager.network.numberOfBuffers: 2048

			# Directories for temporary
			files.
			#
			# Add a delimited list for multiple directories, using the
			system
			directory
			# delimiter (colon ':' on unix) or a comma, e.g.:
			#
			/data1/tmp:/data2/tmp:/data3/tmp
			#
			# Note: Each directory entry is read
			from and written to by a
			different I/O
			# thread. You can include the
			same directory multiple times in order
			to create
			# multiple I/O threads
			against that directory. This is for example
			relevant for
			#
			high-throughput RAIDs.
			#
			# If not specified, the system-specific Java
			temporary directory
			(java.io.tmpdir
			# property) is taken.
			#
			#
			taskmanager.tmp.dirs: /tmp

			# Path to the Hadoop configuration
			directory.
			#
			# This configuration is used when writing into HDFS.
			Unless specified
			otherwise,
			# HDFS file creation will use HDFS default
			settings with respect to
			block-size,
			# replication factor, etc.
			#
			# You
			can also directly specify the paths to hdfs-default.xml and
			hdfs-site.xml
			# via keys 'fs.hdfs.hdfsdefault' and 'fs.hdfs.hdfssite'.
			#
			# fs.hdfs.hadoopconf: /path/to/hadoop/conf/
			env.java.home: /usr/jdk64/jdk1.8.0_77/jre
			taskmanager.memory.fraction: 0.6
			env.java.opts: -XX:+UseG1GC
		</value>
		<value-attributes>
			<type>content</type>
		</value-attributes>
		<on-ambari-upgrade add="true" />
	</property>
</configuration>
